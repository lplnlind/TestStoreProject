@page "/admin/users"
@inject IUserClient UserClient
@inject ISnackbar Snackbar

<h3>مدیریت کاربران</h3>

@if (users == null)
{
    <p>در حال بارگذاری...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>نام</th>
                <th>ایمیل</th>
                <th>نقش</th>
                <th>وضعیت</th>
                <th>عملیات</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.FullName</td>
                    <td>@user.Email</td>
                    <td>
                        <select @onchange="e => UpdateRole(user.Id, e.Value?.ToString())">
                            @foreach (var role in roles)
                            {
                                <option value="@role" selected="@(role == user.Role)">@role</option>
                            }
                        </select>
                    </td>
                    <td>@(user.IsActive ? "فعال" : "غیرفعال")</td>
                    <td>
                        <button @onclick="() => ToggleStatus(user.Id, !user.IsActive)">
                            @(user.IsActive ? "غیرفعال‌سازی" : "فعال‌سازی")
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<UserDto>? users;
    private List<string> roles = new() { "User", "Admin" };

    protected override async Task OnInitializedAsync()
    {
        users = await UserClient.GetAllUsersAsync();
    }

    private async Task UpdateRole(int userId, string? role)
    {
        if (role is null) return;
        await UserClient.UpdateUserRoleAsync(userId, role);
        Snackbar.Add("نقش کاربر بروزرسانی شد", Severity.Success);
    }

    private async Task ToggleStatus(int userId, bool newStatus)
    {
        await UserClient.ToggleUserStatusAsync(userId, newStatus);
        var user = users!.FirstOrDefault(u => u.Id == userId);
        if (user is not null) user.IsActive = newStatus;
        Snackbar.Add("وضعیت کاربر تغییر کرد", Severity.Info);
    }
}
