@inject AuthenticationStateProvider AuthProvider
@inject IAuthClient AuthClient
@inject NavigationManager NavigationManager

<MudAppBar>
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    <MudText>فروشگاه من</MudText>
    <MudSpacer />
    <AuthorizeView>
        <Authorized>
            <MudText Typo="Typo.subtitle2" Class="mr-2">سلام، @Username</MudText>
            <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="Logout">خروج</MudButton>
        </Authorized>
        <NotAuthorized>
            <MudButton Variant="Variant.Outlined" Color="Color.Inherit" OnClick='() => NavigationManager.NavigateTo("/login")'>ورود</MudButton>
        </NotAuthorized>
    </AuthorizeView>
</MudAppBar>

<MudDrawer @bind-Open="@_drawerOpen">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">ر ی ح ا ن</MudText>
    </MudDrawerHeader>

    <MudNavMenu>
        <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">صفحه اصلی</MudNavLink>
        <MudNavLink Href="/admin/products" Icon="@Icons.Material.Filled.List">محصولات</MudNavLink>
        <MudNavLink Href="/admin/categories" Icon="@Icons.Material.Filled.Category">دسته‌بندی‌ها</MudNavLink>
        <MudNavLink Href="/cart" Match="NavLinkMatch.All">🛒 سبد خرید</MudNavLink>
    </MudNavMenu>
</MudDrawer>


@code {
    bool _drawerOpen = false;

    public void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private bool IsAuthenticated = false;
    private string Username = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            IsAuthenticated = true;
            Username = user.Identity.Name ?? user.FindFirst(c => c.Type == "email")?.Value ?? "کاربر";
        }
    }

    private async Task Logout()
    {
        await AuthClient.LogoutAsync();
        NavigationManager.NavigateTo("/login", true);
    }
}